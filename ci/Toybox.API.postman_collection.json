{
	"info": {
		"_postman_id": "d785304a-6abf-4e3f-913a-d8cb9eefced1",
		"name": "Toybox.API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22796108"
	},
	"item": [
		{
			"name": "api/v1",
			"item": [
				{
					"name": "tictactoe/games",
					"item": [
						{
							"name": "Create a new game",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Initializes current player to X\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.current_player).to.eql('X');",
											"});",
											"pm.test(\"Initializes current round to 0\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.round).to.eql(0);",
											"});",
											"pm.test(\"Initializes an empty board with 9 squares\", function () {",
											"    var jsonData = pm.response.json();",
											"    var board = jsonData.board_state;",
											"    pm.expect(board.length).to.eql(9);",
											"});",
											"pm.globals.set(\"sessionId\", pm.response.json().session_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tictactoe/games/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tictactoe",
										"games",
										"create"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://localhost:7205/api/v1/tictactoe/games/create",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "7205",
											"path": [
												"api",
												"v1",
												"tictactoe",
												"games",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"session_id\": \"<string>\",\n  \"board_state\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"round\": \"<integer>\",\n  \"game_state\": \"<integer>\",\n  \"current_player\": \"<string>\",\n  \"winning_player\": \"<string>\",\n  \"has_next_move\": \"<boolean>\",\n  \"has_winner\": \"<boolean>\",\n  \"winning_squares\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"selected_square\": \"<integer>\"\n}"
								}
							]
						},
						{
							"name": "View all games",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Returns a collection containing the previous game\", function() {",
											"    var response = pm.response.json();",
											"    pm.expect(response.includes(JSON.json(pm.globals.initialState))).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tictactoe/games",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tictactoe",
										"games"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:7205/api/v1/tictactoe/games",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "7205",
											"path": [
												"api",
												"v1",
												"tictactoe",
												"games"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"session_id\": \"<string>\",\n    \"board_state\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"round\": \"<integer>\",\n    \"game_state\": \"<integer>\",\n    \"current_player\": \"<string>\",\n    \"winning_player\": \"<string>\",\n    \"has_next_move\": \"<boolean>\",\n    \"has_winner\": \"<boolean>\",\n    \"winning_squares\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"selected_square\": \"<integer>\"\n  },\n  {\n    \"session_id\": \"<string>\",\n    \"board_state\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"round\": \"<integer>\",\n    \"game_state\": \"<integer>\",\n    \"current_player\": \"<string>\",\n    \"winning_player\": \"<string>\",\n    \"has_next_move\": \"<boolean>\",\n    \"has_winner\": \"<boolean>\",\n    \"winning_squares\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"selected_square\": \"<integer>\"\n  }\n]"
								}
							]
						},
						{
							"name": "View game by session ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tictactoe/games/:sessionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tictactoe",
										"games",
										":sessionId"
									],
									"variable": [
										{
											"key": "sessionId",
											"value": "enim",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:7205/api/v1/tictactoe/games/:sessionId",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "7205",
											"path": [
												"api",
												"v1",
												"tictactoe",
												"games",
												":sessionId"
											],
											"variable": [
												{
													"key": "sessionId",
													"value": "enim",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"session_id\": \"<string>\",\n  \"board_state\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"round\": \"<integer>\",\n  \"game_state\": \"<integer>\",\n  \"current_player\": \"<string>\",\n  \"winning_player\": \"<string>\",\n  \"has_next_move\": \"<boolean>\",\n  \"has_winner\": \"<boolean>\",\n  \"winning_squares\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"selected_square\": \"<integer>\"\n}"
								},
								{
									"name": "Failure: Invalid session ID",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/tictactoe/games/123abc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"tictactoe",
												"games",
												"123abc"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Claim a square",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tictactoe/games/:sessionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tictactoe",
										"games",
										":sessionId"
									],
									"variable": [
										{
											"key": "sessionId",
											"value": "enim",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:7205/api/v1/tictactoe/games/:sessionId",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "7205",
											"path": [
												"api",
												"v1",
												"tictactoe",
												"games",
												":sessionId"
											],
											"variable": [
												{
													"key": "sessionId",
													"value": "enim",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"session_id\": \"<string>\",\n  \"board_state\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"round\": \"<integer>\",\n  \"game_state\": \"<integer>\",\n  \"current_player\": \"<string>\",\n  \"winning_player\": \"<string>\",\n  \"has_next_move\": \"<boolean>\",\n  \"has_winner\": \"<boolean>\",\n  \"winning_squares\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"selected_square\": \"<integer>\"\n}"
								},
								{
									"name": "Failure: Invalid session ID",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/tictactoe/games/123abc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"tictactoe",
												"games",
												"123abc"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failure: Invalid selection",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/tictactoe/games/123abc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"tictactoe",
												"games",
												"123abc"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Clear session by ID",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tictactoe/games/{{sessionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tictactoe",
										"games",
										"{{sessionId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Clear all sessions",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tictactoe/games/{{sessionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tictactoe",
										"games",
										"{{sessionId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/",
			"type": "string"
		}
	]
}